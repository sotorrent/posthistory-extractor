Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
7873162;3758880;276052;2;038858fc-3127-4011-be25-d8e8e74a7662;2010-09-21 09:22:21;"Here is my go at it:

    private static String[] prefix = new String[] {"""",""K"",""M"",""G"",""T"",""P"",""E""};
    
    public static String humanByteCount(long bytes, boolean si) {
        if (bytes == 0) return ""0 B"";
        int unit = si ? 1000 : 1024;
        double power = Math.min(Math.floor(Math.log(bytes)/Math.log(unit)), 6);
        String pref = prefix[(int) power] + (si && power > 0 ? ""iB"" : ""B"");
        String format = power == 0 ? ""%.0f %s"" : ""%.1f %s"";
        return String.format(format, bytes / Math.pow(unit, power), pref);
    }
    

The following lines:

    for (long i = 0; i < 10000000000000L; i = i == 0 ? 3 : i * 5)
        System.out.printf(""%14d: %10s %10s%n"", i,
                humanByteCount(i, true), humanByteCount(i, false));

Prints

                 0:        0 B        0 B
                 3:        3 B        3 B
                15:       15 B       15 B
                75:       75 B       75 B
               375:      375 B      375 B
              1875:    1.9 KiB     1.8 KB
              9375:    9.4 KiB     9.2 KB
             46875:   46.9 KiB    45.8 KB
            234375:  234.4 KiB   228.9 KB
           1171875:    1.2 MiB     1.1 MB
           5859375:    5.9 MiB     5.6 MB
          29296875:   29.3 MiB    27.9 MB
         146484375:  146.5 MiB   139.7 MB
         732421875:  732.4 MiB   698.5 MB
        3662109375:    3.7 GiB     3.4 GB
       18310546875:   18.3 GiB    17.1 GB
       91552734375:   91.6 GiB    85.3 GB
      457763671875:  457.8 GiB   426.3 GB
     2288818359375:    2.3 TiB     2.1 TB
";;
7873319;3758880;276052;5;be00e77b-fbda-4803-a59e-cc202db1b43c;2010-09-21 09:31:09;"Here is my go at it:

    private static String[] prefix = new String[] {"""",""K"",""M"",""G"",""T"",""P"",""E""};
    
    public static String humanByteCount(long bytes, boolean si) {
        if (bytes == 0) return ""0 B"";
        int unit = si ? 1000 : 1024;
        double power = Math.min(Math.floor(Math.log(bytes)/Math.log(unit)), 6);
        String pref = prefix[(int) power] + (si && power > 0 ? ""iB"" : ""B"");
        String format = power == 0 ? ""%.0f %s"" : ""%.1f %s"";
        return String.format(format, bytes / Math.pow(unit, power), pref);
    }
    
Example output:

                 0:        0 B        0 B
                 3:        3 B        3 B
                15:       15 B       15 B
                75:       75 B       75 B
               375:      375 B      375 B
              1875:    1.9 KiB     1.8 KB
              9375:    9.4 KiB     9.2 KB
             46875:   46.9 KiB    45.8 KB
            234375:  234.4 KiB   228.9 KB
           1171875:    1.2 MiB     1.1 MB
           5859375:    5.9 MiB     5.6 MB
          29296875:   29.3 MiB    27.9 MB
         146484375:  146.5 MiB   139.7 MB
         732421875:  732.4 MiB   698.5 MB
        3662109375:    3.7 GiB     3.4 GB
       18310546875:   18.3 GiB    17.1 GB
       91552734375:   91.6 GiB    85.3 GB
      457763671875:  457.8 GiB   426.3 GB
     2288818359375:    2.3 TiB     2.1 TB
";;deleted 206 characters in body
7873489;3758880;276052;5;1324adaa-9d8d-4f5c-8130-1dd4676ae1d4;2010-09-21 09:42:57;"Here is my go at it (handles both si units and binary units):


    public static String humanByteCount(long bytes, boolean si) {
        int unit = si ? 1000 : 1024;
        if (bytes < unit) return bytes + "" B"";
        double power = Math.min(Math.floor(Math.log(bytes)/Math.log(unit)), 6);
        String pref = ""KMGTPE"".charAt((int) power-1) + (si ? ""iB"" : ""B"");
        return String.format(""%.1f %s"", bytes / Math.pow(unit, power), pref);
    }

Example output:

                   0:        0 B        0 B
                   1:        1 B        1 B
                  17:       17 B       17 B
                 289:      289 B      289 B
                4913:    4.9 KiB     4.8 KB
               83521:   83.5 KiB    81.6 KB
             1419857:    1.4 MiB     1.4 MB
            24137569:   24.1 MiB    23.0 MB
           410338673:  410.3 MiB   391.3 MB
          6975757441:    7.0 GiB     6.5 GB
        118587876497:  118.6 GiB   110.4 GB
       2015993900449:    2.0 TiB     1.8 TB
";;"deleted 338 characters in body; deleted 79 characters in body; added 41 characters in body"
7873581;3758880;276052;5;1b2eebee-64f6-4565-b6cf-6ea41a153bd8;2010-09-21 09:49:13;"Here is my go at it (no loops and handles both SI units and binary units):

    public static String humanReadableByteCount(long bytes, boolean si) {
        int unit = si ? 1000 : 1024;
        if (bytes < unit) return bytes + "" B"";
        int power = (int) (Math.log(bytes) / Math.log(unit));
        String prefix = ""KMGTPE"".charAt(power-1) + (si ? ""iB"" : ""B"");
        return String.format(""%.1f %s"", bytes / Math.pow(unit, power), prefix);
    }

Example output:

                   0:        0 B        0 B
                   1:        1 B        1 B
                  17:       17 B       17 B
                 289:      289 B      289 B
                4913:    4.9 KiB     4.8 KB
               83521:   83.5 KiB    81.6 KB
             1419857:    1.4 MiB     1.4 MB
            24137569:   24.1 MiB    23.0 MB
           410338673:  410.3 MiB   391.3 MB
          6975757441:    7.0 GiB     6.5 GB
        118587876497:  118.6 GiB   110.4 GB
       2015993900449:    2.0 TiB     1.8 TB
";;"deleted 26 characters in body; added 4 characters in body; added 8 characters in body; added 13 characters in body"
7874248;3758880;276052;5;800ccb7a-67f4-467d-a69a-8b9ab7972e41;2010-09-21 10:27:59;"Here is my go at it (no loops and handles both SI units and binary units):

    public static String humanReadableByteCount(long bytes, boolean si) {
        int unit = si ? 1000 : 1024;
        if (bytes < unit) return bytes + "" B"";
        int power = (int) (Math.log(bytes) / Math.log(unit));
        String prefix = ""KMGTPE"".charAt(power-1) + (si ? ""iB"" : ""B"");
        return String.format(""%.1f %s"", bytes / Math.pow(unit, power), prefix);
    }

Example output:

                   0:        0 B        0 B
                  17:       17 B       17 B
                 289:      289 B      289 B
                4913:    4.9 KiB     4.8 KB
               83521:   83.5 KiB    81.6 KB
             1419857:    1.4 MiB     1.4 MB
            24137569:   24.1 MiB    23.0 MB
           410338673:  410.3 MiB   391.3 MB
          6975757441:    7.0 GiB     6.5 GB
        118587876497:  118.6 GiB   110.4 GB
       2015993900449:    2.0 TiB     1.8 TB
";;deleted 45 characters in body
7874570;3758880;276052;5;1658830c-b8e9-46cb-8797-c73152caec26;2010-09-21 10:47:32;"Here is my go at it (no loops and handles both SI units and binary units):

    public static String humanReadableByteCount(long bytes, boolean si) {
        int unit = si ? 1000 : 1024;
        if (bytes < unit) return bytes + "" B"";
        int power = (int) (Math.log(bytes) / Math.log(unit));
        String prefix = si ? ""kMGTPE"" : ""KMGTPE"";
        prefix = prefix.charAt(power-1) + (si ? ""B"" : ""iB"");
        return String.format(""%.1f %s"", bytes / Math.pow(unit, power), prefix);
    }

Example output:

                                  SI     BINARY

                       0:        0 B        0 B
                      27:       27 B       27 B
                     999:      999 B      999 B
                    1000:     1.0 KB     1000 B
                    1023:     1.0 KB     1023 B
                    1024:     1.0 KB    1.0 KiB
                    1728:     1.7 KB    1.7 KiB
                  110592:   110.6 KB  108.0 KiB
                 7077888:     7.1 MB    6.8 MiB
               452984832:   453.0 MB  432.0 MiB
             28991029248:    29.0 GB   27.0 GiB
           1855425871872:     1.9 TB    1.7 TiB
     9223372036854775807:     9.2 EB    8.0 EiB   (Long.MAX_VALUE)
";;"added 193 characters in body; added 42 characters in body; added 19 characters in body"
7874704;3758880;276052;5;d00ea2b0-2bcb-4eb9-aa15-41d989f40ff1;2010-09-21 10:55:46;"Here is my go at it (no loops and handles both SI units and binary units):


    public static String humanReadableByteCount(long bytes, boolean si) {
        int unit = si ? 1000 : 1024;
        if (bytes < unit) return bytes + "" B"";
        int power = (int) (Math.log(bytes) / Math.log(unit));
        return String.format(""%.1f %s%s"", bytes / Math.pow(unit, power),
                (si ? ""kMGTPE"" : ""KMGTPE"").charAt(power-1), si ? ""B"" : ""iB"");
    }

Example output:

                                  SI     BINARY

                       0:        0 B        0 B
                      27:       27 B       27 B
                     999:      999 B      999 B
                    1000:     1.0 KB     1000 B
                    1023:     1.0 KB     1023 B
                    1024:     1.0 KB    1.0 KiB
                    1728:     1.7 KB    1.7 KiB
                  110592:   110.6 KB  108.0 KiB
                 7077888:     7.1 MB    6.8 MiB
               452984832:   453.0 MB  432.0 MiB
             28991029248:    29.0 GB   27.0 GiB
           1855425871872:     1.9 TB    1.7 TiB
     9223372036854775807:     9.2 EB    8.0 EiB   (Long.MAX_VALUE)
";;deleted 39 characters in body
7875126;3758880;276052;5;86947e50-9558-4cef-854e-542d31a6c50e;2010-09-21 11:22:55;"Here is my go at it (no loops and handles both SI units and binary units):

    public static String humanReadableByteCount(long bytes, boolean si) {
        int unit = si ? 1000 : 1024;
        if (bytes < unit) return bytes + "" B"";
        int exp = (int) (Math.log(bytes) / Math.log(unit));
        String pre = (si ? ""kMGTPE"" : ""KMGTPE"").charAt(exp-1) + (si ? """" : ""i"");
        return String.format(""%.1f %sB"", bytes / Math.pow(unit, exp), pre);
    }

Example output:

                                  SI     BINARY

                       0:        0 B        0 B
                      27:       27 B       27 B
                     999:      999 B      999 B
                    1000:     1.0 KB     1000 B
                    1023:     1.0 KB     1023 B
                    1024:     1.0 KB    1.0 KiB
                    1728:     1.7 KB    1.7 KiB
                  110592:   110.6 KB  108.0 KiB
                 7077888:     7.1 MB    6.8 MiB
               452984832:   453.0 MB  432.0 MiB
             28991029248:    29.0 GB   27.0 GiB
           1855425871872:     1.9 TB    1.7 TiB
     9223372036854775807:     9.2 EB    8.0 EiB   (Long.MAX_VALUE)
";;added 2 characters in body
15577610;3758880;276052;5;60eb1817-04bd-47ca-a93a-d49c13fbe9d4;2011-08-17 15:00:00;"Here is my go at it (no loops and handles both SI units and binary units):

    public static String humanReadableByteCount(long bytes, boolean si) {
        int unit = si ? 1000 : 1024;
        if (bytes < unit) return bytes + "" B"";
        int exp = (int) (Math.log(bytes) / Math.log(unit));
        String pre = (si ? ""kMGTPE"" : ""KMGTPE"").charAt(exp-1) + (si ? """" : ""i"");
        return String.format(""%.1f %sB"", bytes / Math.pow(unit, exp), pre);
    }

Example output:

                                  SI     BINARY

                       0:        0 B        0 B
                      27:       27 B       27 B
                     999:      999 B      999 B
                    1000:     1.0 kB     1000 B
                    1023:     1.0 kB     1023 B
                    1024:     1.0 kB    1.0 KiB
                    1728:     1.7 kB    1.7 KiB
                  110592:   110.6 kB  108.0 KiB
                 7077888:     7.1 kB    6.8 MiB
               452984832:   453.0 MB  432.0 MiB
             28991029248:    29.0 GB   27.0 GiB
           1855425871872:     1.9 TB    1.7 TiB
     9223372036854775807:     9.2 EB    8.0 EiB   (Long.MAX_VALUE)
";;edited body
24534909;3758880;157882;5;56de0e8d-0f69-4030-ab0f-92bd315394aa;2012-05-17 18:59:28;"Here is my go at it (no loops and handles both SI units and binary units):

    public static String humanReadableByteCount(long bytes, boolean si) {
        int unit = si ? 1000 : 1024;
        if (bytes < unit) return bytes + "" B"";
        int exp = (int) (Math.log(bytes) / Math.log(unit));
        String pre = (si ? ""kMGTPE"" : ""KMGTPE"").charAt(exp-1) + (si ? """" : ""i"");
        return String.format(""%.1f %sB"", bytes / Math.pow(unit, exp), pre);
    }

Example output:

                                  SI     BINARY

                       0:        0 B        0 B
                      27:       27 B       27 B
                     999:      999 B      999 B
                    1000:     1.0 kB     1000 B
                    1023:     1.0 kB     1023 B
                    1024:     1.0 kB    1.0 KiB
                    1728:     1.7 kB    1.7 KiB
                  110592:   110.6 kB  108.0 KiB
                 7077888:     7.1 MB    6.8 MiB
               452984832:   453.0 MB  432.0 MiB
             28991029248:    29.0 GB   27.0 GiB
           1855425871872:     1.9 TB    1.7 TiB
     9223372036854775807:     9.2 EB    8.0 EiB   (Long.MAX_VALUE)
";;Fixed typo
130380462;3758880;276052;5;4eaf6394-79cb-41c2-b209-601bace34bfc;2016-10-29 03:58:02;"Here is my go at it (no loops and handles both SI units and binary units):

    public static String humanReadableByteCount(long bytes, boolean si) {
        int unit = si ? 1000 : 1024;
        if (bytes < unit) return bytes + "" B"";
        int exp = (int) (Math.log(bytes) / Math.log(unit));
        String pre = (si ? ""kMGTPE"" : ""KMGTPE"").charAt(exp-1) + (si ? """" : ""i"");
        return String.format(""%.1f %sB"", bytes / Math.pow(unit, exp), pre);
    }

Example output:

                                  SI     BINARY

                       0:        0 B        0 B
                      27:       27 B       27 B
                     999:      999 B      999 B
                    1000:     1.0 kB     1000 B
                    1023:     1.0 kB     1023 B
                    1024:     1.0 kB    1.0 KiB
                    1728:     1.7 kB    1.7 KiB
                  110592:   110.6 kB  108.0 KiB
                 7077888:     7.1 MB    6.8 MiB
               452984832:   453.0 MB  432.0 MiB
             28991029248:    29.0 GB   27.0 GiB
           1855425871872:     1.9 TB    1.7 TiB
     9223372036854775807:     9.2 EB    8.0 EiB   (Long.MAX_VALUE)


----------

Related article: [Java: Formatting byte size to human readable format](http://programming.guide/java/formatting-byte-size-to-human-readable-format.html)";;added 161 characters in body
