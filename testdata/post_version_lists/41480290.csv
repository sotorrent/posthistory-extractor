Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
135270027;41480290;3585072;2;5ddf3368-abd3-410c-b3ff-b8881651f40e;2017-01-05 08:26:26.0;"I am using FCM messaging and getting Push Message:&#xD;&#xA;&#xD;&#xA;        //message will contain the Push Message&#xD;&#xA;        String message = remoteMessage.getData().get(""message"");&#xD;&#xA;&#xD;&#xA;And then trying to store into SQLite databse table:&#xD;&#xA;&#xD;&#xA;       dbManager.insert(message, ""Some Data"");&#xD;&#xA;&#xD;&#xA;But unable to store it, here is the complete service class code:&#xD;&#xA;&#xD;&#xA;    public class MyFirebaseMessagingService extends FirebaseMessagingService {&#xD;&#xA;    &#xD;&#xA;        private DBManager dbManager;&#xD;&#xA;        private static final String TAG = ""FirebaseMessageService"";&#xD;&#xA;        Bitmap bitmap;&#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Called when message is received.&#xD;&#xA;         *&#xD;&#xA;         * @param remoteMessage Object representing the message received from Firebase Cloud Messaging.&#xD;&#xA;         */&#xD;&#xA;        @Override&#xD;&#xA;        public void onMessageReceived(RemoteMessage remoteMessage) {&#xD;&#xA;            // There are two types of messages data messages and notification messages. Data messages are handled&#xD;&#xA;            // here in onMessageReceived whether the app is in the foreground or background. Data messages are the type&#xD;&#xA;            // traditionally used with GCM. Notification messages are only received here in onMessageReceived when the app&#xD;&#xA;            // is in the foreground. When the app is in the background an automatically generated notification is displayed.&#xD;&#xA;            // When the user taps on the notification they are returned to the app. Messages containing both notification&#xD;&#xA;            // and data payloads are treated as notification messages. The Firebase console always sends notification&#xD;&#xA;            // messages. For more see: https://firebase.google.com/docs/cloud-messaging/concept-options&#xD;&#xA;            //&#xD;&#xA;            Log.d(TAG, ""From: "" + remoteMessage.getFrom());&#xD;&#xA;    &#xD;&#xA;            // Check if message contains a data payload.&#xD;&#xA;            if (remoteMessage.getData().size() > 0) {&#xD;&#xA;                Log.d(TAG, ""Message data payload: "" + remoteMessage.getData());&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            // Check if message contains a notification payload.&#xD;&#xA;            if (remoteMessage.getNotification() != null) {&#xD;&#xA;                Log.d(TAG, ""Message Notification Body: "" + remoteMessage.getNotification().getBody());&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            //The message which i send will have keys named [message, image, AnotherActivity] and corresponding values.&#xD;&#xA;            //You can change as per the requirement.&#xD;&#xA;    &#xD;&#xA;            //message will contain the Push Message&#xD;&#xA;            String message = remoteMessage.getData().get(""message"");&#xD;&#xA;            //imageUri will contain URL of the image to be displayed with Notification&#xD;&#xA;            String imageUri = remoteMessage.getData().get(""image"");&#xD;&#xA;            //If the key AnotherActivity has  value as True then when the user taps on notification, in the app AnotherActivity will be opened.&#xD;&#xA;            //If the key AnotherActivity has  value as False then when the user taps on notification, in the app MainActivity will be opened.&#xD;&#xA;            String TrueOrFlase = remoteMessage.getData().get(""AnotherActivity"");&#xD;&#xA;    &#xD;&#xA;            //To get a Bitmap image from the URL received&#xD;&#xA;            bitmap = getBitmapfromUrl(imageUri);&#xD;&#xA;    &#xD;&#xA;            sendNotification(message, bitmap, TrueOrFlase);&#xD;&#xA;    &#xD;&#xA;            dbManager = new DBManager(this);&#xD;&#xA;            dbManager.open();&#xD;&#xA;    &#xD;&#xA;            // to store data into db table&#xD;&#xA;            dbManager.insert(message, ""Some Data"");&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        /**&#xD;&#xA;         * Create and show a simple notification containing the received FCM message.&#xD;&#xA;         */&#xD;&#xA;    &#xD;&#xA;        private void sendNotification(String messageBody, Bitmap image, String TrueOrFalse) {&#xD;&#xA;            Intent intent = new Intent(this, MainActivity.class);&#xD;&#xA;            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);&#xD;&#xA;            intent.putExtra(""AnotherActivity"", TrueOrFalse);&#xD;&#xA;            PendingIntent pendingIntent = PendingIntent.getActivity(this, 0 /* Request code */, intent,&#xD;&#xA;                    PendingIntent.FLAG_ONE_SHOT);&#xD;&#xA;    &#xD;&#xA;            Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);&#xD;&#xA;            NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)&#xD;&#xA;                    .setLargeIcon(image)/*Notification icon image*/&#xD;&#xA;                    .setSmallIcon(R.drawable.ic_launcher)&#xD;&#xA;                    .setContentTitle(messageBody)&#xD;&#xA;                    .setStyle(new NotificationCompat.BigPictureStyle()&#xD;&#xA;                            .bigPicture(image))/*Notification with Image*/&#xD;&#xA;                    .setAutoCancel(true)&#xD;&#xA;                    .setSound(defaultSoundUri)&#xD;&#xA;                    .setContentIntent(pendingIntent);&#xD;&#xA;    &#xD;&#xA;            NotificationManager notificationManager =&#xD;&#xA;                    (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&#xD;&#xA;    &#xD;&#xA;            notificationManager.notify(0 /* ID of notification */, notificationBuilder.build());&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Here is the [link][1] of complete code, which I am using to show Push Notification and trying to show data from db table into ListView within AnotherActivity.java&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://androidbash.com/firebase-push-notification-android/";;
135383884;41480290;3585072;5;01b404d3-e955-4f5d-a5af-b01884ebd30e;2017-01-06 14:55:11.0;"I am getting push notification from Firebase console, in below manner and trying to pass it into Activity&#xD;&#xA;&#xD;&#xA;        //message will contain the Push Message&#xD;&#xA;        String message = remoteMessage.getData().get(""message"");&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://androidbash.com/firebase-push-notification-android/";;"deleted 4913 characters in body; edited tags; edited title"
135384963;41480290;3585072;5;2fafbd31-fb52-4a3f-8912-e965ab4ed53f;2017-01-06 15:09:27.0;"I am getting push notification from Firebase console in a Service class which extends FirebaseMessagingService and trying to pass it into Activity&#xD;&#xA;&#xD;&#xA;        //message will contain the Push Message&#xD;&#xA;        String message = remoteMessage.getData().get(""message"");&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://androidbash.com/firebase-push-notification-android/";;"deleted 4913 characters in body; edited tags; edited title"
135533018;41480290;3585072;5;87e71903-3a57-4e25-99eb-3d59c21256cc;2017-01-09 06:18:38.0;"I am getting Push Notification **Message** from *Firebase* console in a Service class which extends FirebaseMessagingService and passing it to MainActivity.java&#xD;&#xA;&#xD;&#xA;But unable to fetch Message into MainActivity.java, where I am doing mistake, many times I used Intent in my programs but only this time not getting data.&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * Create and show a simple notification containing the received FCM message.&#xD;&#xA;     */&#xD;&#xA;&#xD;&#xA;    private void sendNotification(String messageBody, Bitmap image, String TrueOrFalse) {&#xD;&#xA;        Intent intent = new Intent(this, MainActivity.class);&#xD;&#xA;        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);&#xD;&#xA;        //intent.putExtra(""PushNotifyActivity"", TrueOrFalse);&#xD;&#xA;        intent.putExtra(""MessageBody"", messageBody);&#xD;&#xA;&#xD;&#xA;        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_ONE_SHOT);&#xD;&#xA;&#xD;&#xA;        .....&#xD;&#xA;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;MainActivity.java:&#xD;&#xA;&#xD;&#xA;        public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;    &#xD;&#xA;            onNewIntent(getIntent());&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;       @Override&#xD;&#xA;        public void onNewIntent(Intent intent) {&#xD;&#xA;            Toast.makeText(MainActivity.this, ""Intent:CALLED"", Toast.LENGTH_LONG).show();&#xD;&#xA;            Bundle extras = intent.getExtras();&#xD;&#xA;            if (extras != null) {&#xD;&#xA;                if (extras.containsKey(""MessageBody"")) {&#xD;&#xA;                    String msg = extras.getString(""MessageBody"");&#xD;&#xA;                    Toast.makeText(MainActivity.this, msg, Toast.LENGTH_LONG).show();&#xD;&#xA;    &#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }";;added 1317 characters in body
135547482;41480290;3585072;5;c89cab29-581f-4e1c-b36e-7058d7726dd5;2017-01-09 10:11:24.0;"I am getting Push Notification **Message** from *Firebase* console in a Service class which extends FirebaseMessagingService and passing it to MainActivity.java&#xD;&#xA;&#xD;&#xA;But unable to fetch Message into MainActivity.java, where I am doing mistake, many times I used Intent in my programs but only this time not getting data.&#xD;&#xA;&#xD;&#xA;MyFirebaseMessagingService.java:&#xD;&#xA;&#xD;&#xA;    public class MyFirebaseMessagingService extends FirebaseMessagingService {&#xD;&#xA;    &#xD;&#xA;        private static final String TAG = ""FirebaseMessageService"";&#xD;&#xA;        Bitmap bitmap;&#xD;&#xA;        String strMessage = """", strImageURI = """", strTrueOrFalse = """";&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onMessageReceived(RemoteMessage remoteMessage) {&#xD;&#xA;            Log.d(TAG, ""From: "" + remoteMessage.getFrom());&#xD;&#xA;    &#xD;&#xA;            if (remoteMessage.getData().size() > 0) {&#xD;&#xA;                Log.d(TAG, ""Message data payload: "" + remoteMessage.getData());&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            if (remoteMessage.getNotification() != null) {&#xD;&#xA;                Log.d(TAG, ""Message Notification Body: "" + remoteMessage.getNotification().getBody());&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            strMessage = remoteMessage.getData().get(""message"");&#xD;&#xA;    &#xD;&#xA;            strImageURI = remoteMessage.getData().get(""image"");&#xD;&#xA;    &#xD;&#xA;            strTrueOrFalse = remoteMessage.getData().get(""PushNotifyActivity"");&#xD;&#xA;    &#xD;&#xA;            bitmap = getBitmapfromUrl(strImageURI);&#xD;&#xA;    &#xD;&#xA;            sendNotification(strMessage, bitmap, strTrueOrFalse);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private void sendNotification(String messageBody, Bitmap image, String TrueOrFalse) {&#xD;&#xA;    &#xD;&#xA;            Intent intent = new Intent(this, MainActivity.class);&#xD;&#xA;            String strTest = ""Testing""; // fixed text for testing&#xD;&#xA;            intent.putExtra(""MessageBody"", strTest);&#xD;&#xA;    &#xD;&#xA;            PendingIntent pendingIntent = PendingIntent.getActivity(this, (int) System.currentTimeMillis(), intent, PendingIntent.FLAG_UPDATE_CURRENT);&#xD;&#xA;    &#xD;&#xA;            Intent notificationIntent = new Intent(getApplicationContext(), MainActivity.class);&#xD;&#xA;            notificationIntent.putExtra(""NotificationMessage"", strTest);&#xD;&#xA;            PendingIntent pendingNotificationIntent = PendingIntent.getActivity(getApplicationContext(),0,notificationIntent,PendingIntent.FLAG_UPDATE_CURRENT);&#xD;&#xA;            Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);&#xD;&#xA;            NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)&#xD;&#xA;                    .setLargeIcon(image)/*Notification icon image*/&#xD;&#xA;                    .setSmallIcon(R.drawable.ic_launcher)&#xD;&#xA;                    .setContentTitle(messageBody)&#xD;&#xA;                    .setStyle(new NotificationCompat.BigPictureStyle()&#xD;&#xA;                            .bigPicture(image))/*Notification with Image*/&#xD;&#xA;                    .setAutoCancel(true)&#xD;&#xA;                    .setSound(defaultSoundUri)&#xD;&#xA;                    .setContentIntent(pendingIntent);&#xD;&#xA;    &#xD;&#xA;            NotificationManager notificationManager =&#xD;&#xA;                    (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&#xD;&#xA;    &#xD;&#xA;            notificationManager.notify(0, notificationBuilder.build());&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;MainActivity.java:&#xD;&#xA;&#xD;&#xA;        public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;    &#xD;&#xA;            onNewIntent(getIntent());&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;    @Override&#xD;&#xA;    public void onNewIntent(Intent intent) {&#xD;&#xA;        Toast.makeText(MainActivity.this, ""Intent:CALLED"", Toast.LENGTH_LONG).show();&#xD;&#xA;        Bundle extras = intent.getExtras();&#xD;&#xA;    &#xD;&#xA;        if (extras != null) {&#xD;&#xA;            Toast.makeText(MainActivity.this, ""Extras found"", Toast.LENGTH_LONG).show();&#xD;&#xA;    &#xD;&#xA;            String msg = extras.getString(""MessageBody"");&#xD;&#xA;            Toast.makeText(MainActivity.this, ""Open: ""+msg, Toast.LENGTH_LONG).show(); // Getting null everytime&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    }";;added 2326 characters in body
135548369;41480290;3585072;5;a70e4fee-af4a-4e3b-b890-00f930598725;2017-01-09 10:21:40.0;"I am getting Push Notification **Message** from *Firebase* console in a Service class which extends FirebaseMessagingService and passing it to MainActivity.java&#xD;&#xA;&#xD;&#xA;But unable to fetch Message into MainActivity.java, where I am doing mistake, many times I used Intent in my programs but only this time not getting data.&#xD;&#xA;&#xD;&#xA;MyFirebaseMessagingService.java:&#xD;&#xA;&#xD;&#xA;    public class MyFirebaseMessagingService extends FirebaseMessagingService {&#xD;&#xA;&#xD;&#xA;    private static final String TAG = ""FirebaseMessageService"";&#xD;&#xA;    Bitmap bitmap;&#xD;&#xA;    String strMessage = """", strImageURI = """", strTrueOrFalse = """";&#xD;&#xA;&#xD;&#xA;    @Override&#xD;&#xA;    public void onMessageReceived(RemoteMessage remoteMessage) {&#xD;&#xA;        Log.d(TAG, ""From: "" + remoteMessage.getFrom());&#xD;&#xA;&#xD;&#xA;        if (remoteMessage.getData().size() > 0) {&#xD;&#xA;            Log.d(TAG, ""Message data payload: "" + remoteMessage.getData());&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if (remoteMessage.getNotification() != null) {&#xD;&#xA;            Log.d(TAG, ""Message Notification Body: "" + remoteMessage.getNotification().getBody());&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        strMessage = remoteMessage.getData().get(""message"");&#xD;&#xA;&#xD;&#xA;        strImageURI = remoteMessage.getData().get(""image"");&#xD;&#xA;&#xD;&#xA;        strTrueOrFalse = remoteMessage.getData().get(""PushNotifyActivity"");&#xD;&#xA;&#xD;&#xA;        bitmap = getBitmapfromUrl(strImageURI);&#xD;&#xA;&#xD;&#xA;        sendNotification(strMessage, bitmap, strTrueOrFalse);&#xD;&#xA;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    private void sendNotification(String messageBody, Bitmap image, String TrueOrFalse) {&#xD;&#xA;&#xD;&#xA;        Intent notificationIntent = new Intent(getApplicationContext(), MainActivity.class);&#xD;&#xA;        notificationIntent.putExtra(""NotificationMessage"", ""Testing"");&#xD;&#xA;        PendingIntent pendingIntent = PendingIntent.getActivity(getApplicationContext(),0,notificationIntent,PendingIntent.FLAG_UPDATE_CURRENT);&#xD;&#xA;        Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);&#xD;&#xA;        NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)&#xD;&#xA;                .setLargeIcon(image)/*Notification icon image*/&#xD;&#xA;                .setSmallIcon(R.drawable.ic_launcher)&#xD;&#xA;                .setContentTitle(messageBody)&#xD;&#xA;                .setStyle(new NotificationCompat.BigPictureStyle()&#xD;&#xA;                        .bigPicture(image))/*Notification with Image*/&#xD;&#xA;                .setAutoCancel(true)&#xD;&#xA;                .setSound(defaultSoundUri)&#xD;&#xA;                .setContentIntent(pendingIntent);&#xD;&#xA;&#xD;&#xA;        NotificationManager notificationManager =&#xD;&#xA;                (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&#xD;&#xA;&#xD;&#xA;        notificationManager.notify(0, notificationBuilder.build());&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;MainActivity.java:&#xD;&#xA;&#xD;&#xA;        public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;    &#xD;&#xA;            onNewIntent(getIntent());&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;     @Override&#xD;&#xA;        public void onNewIntent(Intent intent) {&#xD;&#xA;            Toast.makeText(MainActivity.this, ""Intent:CALLED"", Toast.LENGTH_LONG).show();&#xD;&#xA;            Bundle extras = intent.getExtras();&#xD;&#xA;    &#xD;&#xA;            if (extras != null) {&#xD;&#xA;                Toast.makeText(MainActivity.this, ""Extras found"", Toast.LENGTH_LONG).show();&#xD;&#xA;    &#xD;&#xA;                String msg = extras.getString(""NotificationMessage"");&#xD;&#xA;                Toast.makeText(MainActivity.this, ""Open: ""+msg, Toast.LENGTH_LONG).show();&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;Status:&#xD;&#xA;&#xD;&#xA;    Intent:CALLED&#xD;&#xA;    Extras found&#xD;&#xA;    Open: null";;deleted 552 characters in body
135549336;41480290;3585072;5;9311ed85-356c-4f43-8b76-9cd3f1820786;2017-01-09 10:32:28.0;"I am sending String from a Service class which extends FirebaseMessagingService to MainActivity.java&#xD;&#xA;&#xD;&#xA;But unable to fetch that into MainActivity.java getting null only, where I am doing mistake, many times I used Intent in my programs but only this time not getting data.&#xD;&#xA;&#xD;&#xA;**MyFirebaseMessagingService.java:**&#xD;&#xA;&#xD;&#xA;    public class MyFirebaseMessagingService extends FirebaseMessagingService {&#xD;&#xA;&#xD;&#xA;    private static final String TAG = ""FirebaseMessageService"";&#xD;&#xA;    Bitmap bitmap;&#xD;&#xA;    String strMessage = """", strImageURI = """", strTrueOrFalse = """";&#xD;&#xA;&#xD;&#xA;    @Override&#xD;&#xA;    public void onMessageReceived(RemoteMessage remoteMessage) {&#xD;&#xA;        Log.d(TAG, ""From: "" + remoteMessage.getFrom());&#xD;&#xA;&#xD;&#xA;        if (remoteMessage.getData().size() > 0) {&#xD;&#xA;            Log.d(TAG, ""Message data payload: "" + remoteMessage.getData());&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if (remoteMessage.getNotification() != null) {&#xD;&#xA;            Log.d(TAG, ""Message Notification Body: "" + remoteMessage.getNotification().getBody());&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        strMessage = remoteMessage.getData().get(""message"");&#xD;&#xA;&#xD;&#xA;        strImageURI = remoteMessage.getData().get(""image"");&#xD;&#xA;&#xD;&#xA;        strTrueOrFalse = remoteMessage.getData().get(""PushNotifyActivity"");&#xD;&#xA;&#xD;&#xA;        bitmap = getBitmapfromUrl(strImageURI);&#xD;&#xA;&#xD;&#xA;        sendNotification(strMessage, bitmap, strTrueOrFalse);&#xD;&#xA;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    private void sendNotification(String messageBody, Bitmap image, String TrueOrFalse) {&#xD;&#xA;&#xD;&#xA;        Intent notificationIntent = new Intent(getApplicationContext(), MainActivity.class);&#xD;&#xA;        notificationIntent.putExtra(""NotificationMessage"", ""Testing"");&#xD;&#xA;        PendingIntent pendingIntent = PendingIntent.getActivity(getApplicationContext(),0,notificationIntent,PendingIntent.FLAG_UPDATE_CURRENT);&#xD;&#xA;        Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);&#xD;&#xA;        NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)&#xD;&#xA;                .setLargeIcon(image)/*Notification icon image*/&#xD;&#xA;                .setSmallIcon(R.drawable.ic_launcher)&#xD;&#xA;                .setContentTitle(messageBody)&#xD;&#xA;                .setStyle(new NotificationCompat.BigPictureStyle()&#xD;&#xA;                        .bigPicture(image))/*Notification with Image*/&#xD;&#xA;                .setAutoCancel(true)&#xD;&#xA;                .setSound(defaultSoundUri)&#xD;&#xA;                .setContentIntent(pendingIntent);&#xD;&#xA;&#xD;&#xA;        NotificationManager notificationManager =&#xD;&#xA;                (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&#xD;&#xA;&#xD;&#xA;        notificationManager.notify(0, notificationBuilder.build());&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;**MainActivity.java:**&#xD;&#xA;&#xD;&#xA;        public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;    &#xD;&#xA;            onNewIntent(getIntent());&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;     @Override&#xD;&#xA;        public void onNewIntent(Intent intent) {&#xD;&#xA;            Toast.makeText(MainActivity.this, ""Intent:CALLED"", Toast.LENGTH_LONG).show();&#xD;&#xA;            Bundle extras = intent.getExtras();&#xD;&#xA;    &#xD;&#xA;            if (extras != null) {&#xD;&#xA;                Toast.makeText(MainActivity.this, ""Extras found"", Toast.LENGTH_LONG).show();&#xD;&#xA;    &#xD;&#xA;                String msg = extras.getString(""NotificationMessage"");&#xD;&#xA;                Toast.makeText(MainActivity.this, ""Open: ""+msg, Toast.LENGTH_LONG).show();&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;**Status:**&#xD;&#xA;&#xD;&#xA;    Intent:CALLED&#xD;&#xA;    Extras found&#xD;&#xA;    Open: null&#xD;&#xA;&#xD;&#xA;**Question:** Why I am getting null instead of string in MainActivity.java";;added 45 characters in body
135621436;41480290;3585072;5;2ff6b7d9-b1f2-4085-b78d-16b7223b97e0;2017-01-10 07:32:30.0;"I am sending String from a Service class which extends FirebaseMessagingService to MainActivity.java&#xD;&#xA;&#xD;&#xA;But unable to fetch that into MainActivity.java getting null only, where I am doing mistake, many times I used Intent in my programs but only this time not getting data.&#xD;&#xA;&#xD;&#xA;**MyFirebaseMessagingService.java:**&#xD;&#xA;&#xD;&#xA;    public class MyFirebaseMessagingService extends FirebaseMessagingService {&#xD;&#xA;&#xD;&#xA;    private static final String TAG = ""FirebaseMessageService"";&#xD;&#xA;    Bitmap bitmap;&#xD;&#xA;    String strMessage = """", strImageURI = """", strTrueOrFalse = """";&#xD;&#xA;&#xD;&#xA;    @Override&#xD;&#xA;    public void onMessageReceived(RemoteMessage remoteMessage) {&#xD;&#xA;        Log.d(TAG, ""From: "" + remoteMessage.getFrom());&#xD;&#xA;&#xD;&#xA;        if (remoteMessage.getData().size() > 0) {&#xD;&#xA;            Log.d(TAG, ""Message data payload: "" + remoteMessage.getData());&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if (remoteMessage.getNotification() != null) {&#xD;&#xA;            Log.d(TAG, ""Message Notification Body: "" + remoteMessage.getNotification().getBody());&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        strMessage = remoteMessage.getData().get(""message"");&#xD;&#xA;&#xD;&#xA;        strImageURI = remoteMessage.getData().get(""image"");&#xD;&#xA;&#xD;&#xA;        strTrueOrFalse = remoteMessage.getData().get(""PushNotifyActivity"");&#xD;&#xA;&#xD;&#xA;        bitmap = getBitmapfromUrl(strImageURI);&#xD;&#xA;&#xD;&#xA;        sendNotification(strMessage, bitmap, strTrueOrFalse);&#xD;&#xA;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    private void sendNotification(String messageBody, Bitmap image, String TrueOrFalse) {&#xD;&#xA;&#xD;&#xA;        Intent notificationIntent = new Intent(getApplicationContext(), MainActivity.class);&#xD;&#xA;        notificationIntent.putExtra(""NotificationMessage"", ""Testing"");&#xD;&#xA;        PendingIntent pendingIntent = PendingIntent.getActivity(getApplicationContext(),0,notificationIntent,PendingIntent.FLAG_UPDATE_CURRENT);&#xD;&#xA;        Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);&#xD;&#xA;        NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)&#xD;&#xA;                .setLargeIcon(image)/*Notification icon image*/&#xD;&#xA;                .setSmallIcon(R.drawable.ic_launcher)&#xD;&#xA;                .setContentTitle(messageBody)&#xD;&#xA;                .setStyle(new NotificationCompat.BigPictureStyle()&#xD;&#xA;                        .bigPicture(image))/*Notification with Image*/&#xD;&#xA;                .setAutoCancel(true)&#xD;&#xA;                .setSound(defaultSoundUri)&#xD;&#xA;                .setContentIntent(pendingIntent);&#xD;&#xA;&#xD;&#xA;        NotificationManager notificationManager =&#xD;&#xA;                (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&#xD;&#xA;&#xD;&#xA;        notificationManager.notify(0, notificationBuilder.build());&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;**MainActivity.java:**&#xD;&#xA;&#xD;&#xA;        public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;            setContentView(R.layout.activity_main);&#xD;&#xA;    &#xD;&#xA;            onNewIntent(getIntent());&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;        @Override&#xD;&#xA;    public void onNewIntent(Intent intent) {&#xD;&#xA;        Toast.makeText(MainActivity.this, ""Intent:CALLED"", Toast.LENGTH_LONG).show();&#xD;&#xA;    &#xD;&#xA;        if (intent!= null) {&#xD;&#xA;            Toast.makeText(MainActivity.this, ""Extras found"", Toast.LENGTH_LONG).show();&#xD;&#xA;    &#xD;&#xA;            String msg = intent.getStringExtra(""NotificationMessage"");&#xD;&#xA;            Toast.makeText(MainActivity.this, ""Open: ""+msg, Toast.LENGTH_LONG).show();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;**Status:**&#xD;&#xA;&#xD;&#xA;    Intent:CALLED&#xD;&#xA;    Extras found&#xD;&#xA;    Open: null&#xD;&#xA;&#xD;&#xA;**Question:** Why I am getting null instead of string in MainActivity.java";;deleted 80 characters in body
136628047;41480290;3585072;5;7d2ef196-2f34-4836-9e72-c3c047ae957b;2017-01-23 11:50:36.0;"I am sending String from a Service class which extends FirebaseMessagingService to MainActivity.java&#xD;&#xA;&#xD;&#xA;But unable to fetch that into MainActivity.java getting null only, where I am doing mistake, many times I used Intent in my programs but only this time not getting data.&#xD;&#xA;&#xD;&#xA;**MyFirebaseMessagingService.java:**&#xD;&#xA;&#xD;&#xA;    public class MyFirebaseMessagingService extends FirebaseMessagingService {&#xD;&#xA;    &#xD;&#xA;        private static final String TAG = ""FirebaseMessageService"";&#xD;&#xA;        Bitmap bitmap;&#xD;&#xA;        String strMessage = """", strImageURI = """", strTrueOrFalse = """";&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onMessageReceived(RemoteMessage remoteMessage) {&#xD;&#xA;            Log.d(TAG, ""From: "" + remoteMessage.getFrom());&#xD;&#xA;    &#xD;&#xA;            if (remoteMessage.getData().size() > 0) {&#xD;&#xA;                Log.d(TAG, ""Message data payload: "" + remoteMessage.getData());&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            if (remoteMessage.getNotification() != null) {&#xD;&#xA;                Log.d(TAG, ""Message Notification Body: "" + remoteMessage.getNotification().getBody());&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            strMessage = remoteMessage.getData().get(""message"");&#xD;&#xA;    &#xD;&#xA;            strImageURI = remoteMessage.getData().get(""image"");&#xD;&#xA;    &#xD;&#xA;            strTrueOrFalse = remoteMessage.getData().get(""PushNotifyActivity"");&#xD;&#xA;    &#xD;&#xA;            bitmap = getBitmapfromUrl(strImageURI);&#xD;&#xA;    &#xD;&#xA;            sendNotification(strMessage, bitmap, strTrueOrFalse);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private void sendNotification(String messageBody, Bitmap image, String TrueOrFalse) {&#xD;&#xA;    &#xD;&#xA;            Intent notificationIntent = new Intent(getApplicationContext(), MainActivity.class);&#xD;&#xA;            notificationIntent.putExtra(""NotificationMessage"", ""Testing"");&#xD;&#xA;            PendingIntent pendingIntent = PendingIntent.getActivity(this,0, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);&#xD;&#xA;            Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);&#xD;&#xA;            NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)&#xD;&#xA;                    .setLargeIcon(image)/*Notification icon image*/&#xD;&#xA;                    .setSmallIcon(R.drawable.ic_launcher)&#xD;&#xA;                    .setContentTitle(messageBody)&#xD;&#xA;                    .setStyle(new NotificationCompat.BigPictureStyle()&#xD;&#xA;                            .bigPicture(image))/*Notification with Image*/&#xD;&#xA;                    .setAutoCancel(true)&#xD;&#xA;                    .setSound(defaultSoundUri)&#xD;&#xA;                    .setContentIntent(pendingIntent);&#xD;&#xA;    &#xD;&#xA;            NotificationManager notificationManager =&#xD;&#xA;                    (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&#xD;&#xA;    &#xD;&#xA;            notificationManager.notify(0, notificationBuilder.build());&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public Bitmap getBitmapfromUrl(String imageUrl) {&#xD;&#xA;            try {&#xD;&#xA;                URL url = new URL(imageUrl);&#xD;&#xA;                HttpURLConnection connection = (HttpURLConnection) url.openConnection();&#xD;&#xA;                connection.setDoInput(true);&#xD;&#xA;                connection.connect();&#xD;&#xA;                InputStream input = connection.getInputStream();&#xD;&#xA;                Bitmap bitmap = BitmapFactory.decodeStream(input);&#xD;&#xA;                return bitmap;&#xD;&#xA;    &#xD;&#xA;            } catch (Exception e) {&#xD;&#xA;                // TODO Auto-generated catch block&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;                return null;&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;**Note:** To testing string passing or not from here, I have given ""Testing"" as default String to get, but unfortunately even I am not getting same in a MainActivity.java.&#xD;&#xA;&#xD;&#xA;**MainActivity.java:**&#xD;&#xA;    &#xD;&#xA;                   public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;                super.onCreate(savedInstanceState);&#xD;&#xA;                this.requestWindowFeature(Window.FEATURE_NO_TITLE);&#xD;&#xA;                setContentView(R.layout.activity_main);&#xD;&#xA;        &#xD;&#xA;                onNewIntent(getIntent());&#xD;&#xA;    &#xD;&#xA;                subscribeToPushService();&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;       private void subscribeToPushService() {&#xD;&#xA;            FirebaseMessaging.getInstance().subscribeToTopic(""news"");&#xD;&#xA;    &#xD;&#xA;            String token = FirebaseInstanceId.getInstance().getToken();&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onNewIntent(Intent intent) {&#xD;&#xA;            dbManager = new DBManager(MainActivity.this);&#xD;&#xA;            dbManager.open();&#xD;&#xA;    &#xD;&#xA;            if (intent!= null) {&#xD;&#xA;    &#xD;&#xA;                String msg = intent.getStringExtra(""NotificationMessage"");&#xD;&#xA;    &#xD;&#xA;                dbManager.insert(msg, """");&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;**Question:** Why I am getting null instead of string in MainActivity.java";;added 1061 characters in body
136630035;41480290;3585072;5;89774fdf-aed1-4857-b178-0b951c23db93;2017-01-23 12:19:40.0;"I am sending String from a Service class which extends FirebaseMessagingService to MainActivity.java&#xD;&#xA;&#xD;&#xA;But unable to fetch that into MainActivity.java getting null only, where I am doing mistake, many times I used Intent in my programs but only this time not getting data.&#xD;&#xA;&#xD;&#xA;**MyFirebaseMessagingService.java:**&#xD;&#xA;&#xD;&#xA;    public class MyFirebaseMessagingService extends FirebaseMessagingService {&#xD;&#xA;    &#xD;&#xA;        private static final String TAG = ""FirebaseMessageService"";&#xD;&#xA;        Bitmap bitmap;&#xD;&#xA;        String strMessage = """", strImageURI = """", strTrueOrFalse = """";&#xD;&#xA;    &#xD;&#xA;        @Override&#xD;&#xA;        public void onMessageReceived(RemoteMessage remoteMessage) {&#xD;&#xA;            Log.d(TAG, ""From: "" + remoteMessage.getFrom());&#xD;&#xA;    &#xD;&#xA;            if (remoteMessage.getData().size() > 0) {&#xD;&#xA;                Log.d(TAG, ""Message data payload: "" + remoteMessage.getData());&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            if (remoteMessage.getNotification() != null) {&#xD;&#xA;                Log.d(TAG, ""Message Notification Body: "" + remoteMessage.getNotification().getBody());&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            strMessage = remoteMessage.getData().get(""message"");&#xD;&#xA;    &#xD;&#xA;            strImageURI = remoteMessage.getData().get(""image"");&#xD;&#xA;    &#xD;&#xA;            strTrueOrFalse = remoteMessage.getData().get(""PushNotifyActivity"");&#xD;&#xA;    &#xD;&#xA;            bitmap = getBitmapfromUrl(strImageURI);&#xD;&#xA;    &#xD;&#xA;            sendNotification(strMessage, bitmap, strTrueOrFalse);&#xD;&#xA;    &#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        private void sendNotification(String messageBody, Bitmap image, String TrueOrFalse) {&#xD;&#xA;    &#xD;&#xA;            Intent notificationIntent = new Intent(getApplicationContext(), MainActivity.class);&#xD;&#xA;            notificationIntent.putExtra(""NotificationMessage"", ""Testing"");&#xD;&#xA;            PendingIntent pendingIntent = PendingIntent.getActivity(this,0, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);&#xD;&#xA;            Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);&#xD;&#xA;            NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)&#xD;&#xA;                    .setLargeIcon(image)/*Notification icon image*/&#xD;&#xA;                    .setSmallIcon(R.drawable.ic_launcher)&#xD;&#xA;                    .setContentTitle(messageBody)&#xD;&#xA;                    .setStyle(new NotificationCompat.BigPictureStyle()&#xD;&#xA;                            .bigPicture(image))/*Notification with Image*/&#xD;&#xA;                    .setAutoCancel(true)&#xD;&#xA;                    .setSound(defaultSoundUri)&#xD;&#xA;                    .setContentIntent(pendingIntent);&#xD;&#xA;    &#xD;&#xA;            NotificationManager notificationManager =&#xD;&#xA;                    (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&#xD;&#xA;    &#xD;&#xA;            notificationManager.notify(0, notificationBuilder.build());&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public Bitmap getBitmapfromUrl(String imageUrl) {&#xD;&#xA;            try {&#xD;&#xA;                URL url = new URL(imageUrl);&#xD;&#xA;                HttpURLConnection connection = (HttpURLConnection) url.openConnection();&#xD;&#xA;                connection.setDoInput(true);&#xD;&#xA;                connection.connect();&#xD;&#xA;                InputStream input = connection.getInputStream();&#xD;&#xA;                Bitmap bitmap = BitmapFactory.decodeStream(input);&#xD;&#xA;                return bitmap;&#xD;&#xA;    &#xD;&#xA;            } catch (Exception e) {&#xD;&#xA;                // TODO Auto-generated catch block&#xD;&#xA;                e.printStackTrace();&#xD;&#xA;                return null;&#xD;&#xA;    &#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;**Note:** To testing string passing or not from here, I have given ""Testing"" as default String to get, but unfortunately even I am not getting same in a MainActivity.java.&#xD;&#xA;&#xD;&#xA;**MainActivity.java:**&#xD;&#xA;    &#xD;&#xA;    public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;        super.onCreate(savedInstanceState);&#xD;&#xA;        this.requestWindowFeature(Window.FEATURE_NO_TITLE);&#xD;&#xA;        setContentView(R.layout.activity_main);&#xD;&#xA;&#xD;&#xA;        onNewIntent(getIntent());&#xD;&#xA;&#xD;&#xA;        subscribeToPushService();&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    private void subscribeToPushService() {&#xD;&#xA;&#xD;&#xA;        FirebaseMessaging.getInstance().subscribeToTopic(""news"");&#xD;&#xA;&#xD;&#xA;        String token = FirebaseInstanceId.getInstance().getToken();&#xD;&#xA;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    @Override&#xD;&#xA;    public void onNewIntent(Intent intent) {&#xD;&#xA;        dbManager = new DBManager(MainActivity.this);&#xD;&#xA;        dbManager.open();&#xD;&#xA;&#xD;&#xA;        String msg = intent.getStringExtra(""NotificationMessage"");&#xD;&#xA;        Toast.makeText(MainActivity.this, ""MSG: ""+msg, Toast.LENGTH_LONG).show();&#xD;&#xA;&#xD;&#xA;        dbManager.insert(msg, """");&#xD;&#xA;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;**Question:** Why I am getting null instead of String ""Testing"" in MainActivity.java";;deleted 106 characters in body
