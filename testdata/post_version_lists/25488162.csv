Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
72159065;25488162;3971619;2;dc07b22a-7cba-4f06-bbb1-91649acbc756;2014-08-25 14:27:09.0;"(Sorry for my english)&#xD;&#xA;&#xD;&#xA;When i try to get my keyChain value i get: &#xD;&#xA;&#xD;&#xA;    Optional(""[thing in the KeyChain]"")&#xD;&#xA;&#xD;&#xA;I have try removing it  using a loop:&#xD;&#xA;&#xD;&#xA;    str = getKeyChain() // return: Optional(""[thing in the KeyChain]"")&#xD;&#xA;&#xD;&#xA;    for(var i = 0; i < 9 ; i++)&#xD;&#xA;    {&#xD;&#xA;        str[i] = 0&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;But because str is a NSString it say: NSString does not have a member named 'SubScript'&#xD;&#xA;&#xD;&#xA;How can i do what i am trying to do but with a NSString ?";;
72159434;25488162;3379523;5;ffde7621-1915-48b0-888b-b5992ae7ace5;2014-08-25 14:31:55.0;"When I try to get my keyChain value, I get: &#xD;&#xA;&#xD;&#xA;    Optional(""[thing in the KeyChain]"")&#xD;&#xA;&#xD;&#xA;so, I tried to remove it by using a loop:&#xD;&#xA;&#xD;&#xA;    str = getKeyChain() // return: Optional(""[thing in the KeyChain]"")&#xD;&#xA;&#xD;&#xA;    for(var i = 0; i < 9 ; i++)&#xD;&#xA;    {&#xD;&#xA;        str[i] = 0&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;But str is a NSString, so it says : &#xD;&#xA;&#xD;&#xA;    NSString does not have a member named 'SubScript'&#xD;&#xA;&#xD;&#xA;How can I do this with a NSString ?";;"english correction and visibility correction "
72160416;25488162;3971619;5;902fc059-3793-48af-824f-957f5fd738c6;2014-08-25 14:46:48.0;"When I try to get my keyChain value, I get: &#xD;&#xA;&#xD;&#xA;    Optional(""[thing in the KeyChain]"")&#xD;&#xA;&#xD;&#xA;so, I tried to remove it by using a loop:&#xD;&#xA;&#xD;&#xA;    var str = KeychainService.loadToken()&#xD;&#xA;        &#xD;&#xA;    for(var i = 0; i < 9 ; i++)&#xD;&#xA;    {&#xD;&#xA;        str[i] = """"&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;The loadToken function:&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;&#xD;&#xA;private class func load(service: NSString) -> String? {&#xD;&#xA;        &#xD;&#xA;        var keychainQuery: NSMutableDictionary = NSMutableDictionary(objects: [kSecClassGenericPasswordValue, service, userAccount, kCFBooleanTrue, kSecMatchLimitOneValue], forKeys: [kSecClassValue, kSecAttrServiceValue, kSecAttrAccountValue, kSecReturnDataValue, kSecMatchLimitValue])&#xD;&#xA;        &#xD;&#xA;        var dataTypeRef :Unmanaged<AnyObject>?&#xD;&#xA;        &#xD;&#xA;        // Search for the keychain items&#xD;&#xA;        let status: OSStatus = SecItemCopyMatching(keychainQuery, &dataTypeRef)&#xD;&#xA;        &#xD;&#xA;        let opaque = dataTypeRef?.toOpaque()&#xD;&#xA;        &#xD;&#xA;        var contentsOfKeychain: String?&#xD;&#xA;        &#xD;&#xA;        if let op = opaque? {&#xD;&#xA;            let retrievedData = Unmanaged<NSData>.fromOpaque(op).takeUnretainedValue()&#xD;&#xA;            &#xD;&#xA;            // Convert the data retrieved from the keychain into a string&#xD;&#xA;            contentsOfKeychain = NSString(data: retrievedData, encoding: NSUTF8StringEncoding)&#xD;&#xA;        } else {&#xD;&#xA;            println(""Nothing was retrieved from the keychain. Status code \\(status)"")&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        return contentsOfKeychain&#xD;&#xA;    }";;added 1015 characters in body
72160472;25488162;451475;5;a607d057-277b-4278-a314-74a6608f9d17;2014-08-25 14:47:34.0;"When I try to get my keyChain value, I get: &#xD;&#xA;&#xD;&#xA;    Optional(""[thing in the KeyChain]"")&#xD;&#xA;&#xD;&#xA;so, I tried to remove it by using a loop:&#xD;&#xA;&#xD;&#xA;    var str = KeychainService.loadToken()&#xD;&#xA;        &#xD;&#xA;    for(var i = 0; i < 9 ; i++)&#xD;&#xA;    {&#xD;&#xA;        str[i] = """"&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;The loadToken function:&#xD;&#xA;&#xD;&#xA;    private class func load(service: NSString) -> String? {&#xD;&#xA;        &#xD;&#xA;        var keychainQuery: NSMutableDictionary = NSMutableDictionary(objects: [kSecClassGenericPasswordValue, service, userAccount, kCFBooleanTrue, kSecMatchLimitOneValue], forKeys: [kSecClassValue, kSecAttrServiceValue, kSecAttrAccountValue, kSecReturnDataValue, kSecMatchLimitValue])&#xD;&#xA;        &#xD;&#xA;        var dataTypeRef :Unmanaged<AnyObject>?&#xD;&#xA;        &#xD;&#xA;        // Search for the keychain items&#xD;&#xA;        let status: OSStatus = SecItemCopyMatching(keychainQuery, &dataTypeRef)&#xD;&#xA;        &#xD;&#xA;        let opaque = dataTypeRef?.toOpaque()&#xD;&#xA;        &#xD;&#xA;        var contentsOfKeychain: String?&#xD;&#xA;        &#xD;&#xA;        if let op = opaque? {&#xD;&#xA;            let retrievedData = Unmanaged<NSData>.fromOpaque(op).takeUnretainedValue()&#xD;&#xA;            &#xD;&#xA;            // Convert the data retrieved from the keychain into a string&#xD;&#xA;            contentsOfKeychain = NSString(data: retrievedData, encoding: NSUTF8StringEncoding)&#xD;&#xA;        } else {&#xD;&#xA;            println(""Nothing was retrieved from the keychain. Status code \\(status)"")&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        return contentsOfKeychain&#xD;&#xA;    }";;deleted 4 characters in body
72160571;25488162;3971619;5;11545bc0-1af8-4851-9acc-75fdbb4f3ccf;2014-08-25 14:48:39.0;"When I try to get my keyChain value,  it return a string containing: &#xD;&#xA;&#xD;&#xA;    Optional(""[thing in the KeyChain]"")&#xD;&#xA;&#xD;&#xA;so, I tried to remove ""Optional"" by using a loop:&#xD;&#xA;&#xD;&#xA;    var str = KeychainService.loadToken()&#xD;&#xA;        &#xD;&#xA;    for(var i = 0; i < 9 ; i++)&#xD;&#xA;    {&#xD;&#xA;        str[i] = """"&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;But i get a error: NSString does not have a member named 'subscript'&#xD;&#xA;&#xD;&#xA;The loadToken function:&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;&#xD;&#xA;    private class func load(service: NSString) -> String? {&#xD;&#xA;        &#xD;&#xA;        var keychainQuery: NSMutableDictionary = NSMutableDictionary(objects: [kSecClassGenericPasswordValue, service, userAccount, kCFBooleanTrue, kSecMatchLimitOneValue], forKeys: [kSecClassValue, kSecAttrServiceValue, kSecAttrAccountValue, kSecReturnDataValue, kSecMatchLimitValue])&#xD;&#xA;        &#xD;&#xA;        var dataTypeRef :Unmanaged<AnyObject>?&#xD;&#xA;        &#xD;&#xA;        // Search for the keychain items&#xD;&#xA;        let status: OSStatus = SecItemCopyMatching(keychainQuery, &dataTypeRef)&#xD;&#xA;        &#xD;&#xA;        let opaque = dataTypeRef?.toOpaque()&#xD;&#xA;        &#xD;&#xA;        var contentsOfKeychain: String?&#xD;&#xA;        &#xD;&#xA;        if let op = opaque? {&#xD;&#xA;            let retrievedData = Unmanaged<NSData>.fromOpaque(op).takeUnretainedValue()&#xD;&#xA;            &#xD;&#xA;            // Convert the data retrieved from the keychain into a string&#xD;&#xA;            contentsOfKeychain = NSString(data: retrievedData, encoding: NSUTF8StringEncoding)&#xD;&#xA;        } else {&#xD;&#xA;            println(""Nothing was retrieved from the keychain. Status code \\(status)"")&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        return contentsOfKeychain&#xD;&#xA;    }";;added 1015 characters in body
72161258;25488162;3971619;5;deb4ff5e-2dd4-4b5e-886e-9d19f0f90744;2014-08-25 14:58:07.0;"When I try to get my keyChain value,  it return a string containing: &#xD;&#xA;&#xD;&#xA;    Optional(""[thing in the KeyChain]"")&#xD;&#xA;&#xD;&#xA;so, I tried to remove ""Optional"" by using a loop:&#xD;&#xA;&#xD;&#xA;    var str = KeychainService.loadToken()&#xD;&#xA;        &#xD;&#xA;    for(var i = 0; i < 9 ; i++)&#xD;&#xA;    {&#xD;&#xA;        str[i] = """"&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;But i get a error: NSString does not have a member named 'subscript'&#xD;&#xA;&#xD;&#xA;The loadToken function:&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;&#xD;&#xA;    private class func load(service: NSString) -> String? {&#xD;&#xA;        &#xD;&#xA;        var keychainQuery: NSMutableDictionary = NSMutableDictionary(objects: [kSecClassGenericPasswordValue, service, userAccount, kCFBooleanTrue, kSecMatchLimitOneValue], forKeys: [kSecClassValue, kSecAttrServiceValue, kSecAttrAccountValue, kSecReturnDataValue, kSecMatchLimitValue])&#xD;&#xA;        &#xD;&#xA;        var dataTypeRef :Unmanaged<AnyObject>?&#xD;&#xA;        &#xD;&#xA;        // Search for the keychain items&#xD;&#xA;        let status: OSStatus = SecItemCopyMatching(keychainQuery, &dataTypeRef)&#xD;&#xA;        &#xD;&#xA;        let opaque = dataTypeRef?.toOpaque()&#xD;&#xA;        &#xD;&#xA;        var contentsOfKeychain: String?&#xD;&#xA;        &#xD;&#xA;        if let op = opaque? {&#xD;&#xA;            let retrievedData = Unmanaged<NSData>.fromOpaque(op).takeUnretainedValue()&#xD;&#xA;            &#xD;&#xA;            // Convert the data retrieved from the keychain into a string&#xD;&#xA;            contentsOfKeychain = NSString(data: retrievedData, encoding: NSUTF8StringEncoding)&#xD;&#xA;        } else {&#xD;&#xA;            println(""Nothing was retrieved from the keychain. Status code \\(status)"")&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        return contentsOfKeychain&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I have take this code from:&#xD;&#xA;&#xD;&#xA;http://matthewpalmer.net/blog/2014/06/21/example-ios-keychain-swift-save-query/";;added 114 characters in body
72161826;25488162;3971619;5;670649eb-f0be-4185-8e1b-e494b0436e35;2014-08-25 15:06:10.0;"When I try to get my keyChain value,  it return a string containing: &#xD;&#xA;&#xD;&#xA;    Optional(""[thing in the KeyChain]"")&#xD;&#xA;&#xD;&#xA;so, I tried to remove ""Optional"" by using a loop:&#xD;&#xA;&#xD;&#xA;    var str = KeychainService.loadToken()&#xD;&#xA;        &#xD;&#xA;    for(var i = 0; i < 9 ; i++)&#xD;&#xA;    {&#xD;&#xA;        str[i] = """"&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;But i get a error: NSString does not have a member named 'subscript'&#xD;&#xA;&#xD;&#xA;The KeychainService class:&#xD;&#xA;&#xD;&#xA;    import Foundation&#xD;&#xA;    import Security&#xD;&#xA;&#xD;&#xA;    let serviceIdentifier = ""MySerivice""&#xD;&#xA;    let userAccount = ""authenticatedUser""&#xD;&#xA;    let accessGroup = ""MySerivice""&#xD;&#xA;&#xD;&#xA;    // Arguments for the keychain queries&#xD;&#xA;    let kSecClassValue = kSecClass.takeRetainedValue() as NSString&#xD;&#xA;    let kSecAttrAccountValue = kSecAttrAccount.takeRetainedValue() as NSString&#xD;&#xA;    let kSecValueDataValue = kSecValueData.takeRetainedValue() as NSString&#xD;&#xA;    let kSecClassGenericPasswordValue = kSecClassGenericPassword.takeRetainedValue() as NSString&#xD;&#xA;    let kSecAttrServiceValue = kSecAttrService.takeRetainedValue() as NSString&#xD;&#xA;    let kSecMatchLimitValue = kSecMatchLimit.takeRetainedValue() as NSString&#xD;&#xA;    let kSecReturnDataValue = kSecReturnData.takeRetainedValue() as NSString&#xD;&#xA;    let kSecMatchLimitOneValue = kSecMatchLimitOne.takeRetainedValue() as NSString&#xD;&#xA;&#xD;&#xA;    class KeychainService: NSObject {&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;    * Exposed methods to perform queries.&#xD;&#xA;    * Note: feel free to play around with the arguments&#xD;&#xA;    * for these if you want to be able to customise the&#xD;&#xA;    * service identifier, user accounts, access groups, etc.&#xD;&#xA;    */&#xD;&#xA;    internal class func saveToken(token: NSString) {&#xD;&#xA;        self.save(serviceIdentifier, data: token)&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    internal class func loadToken() -> NSString? {&#xD;&#xA;        var token = self.load(serviceIdentifier)&#xD;&#xA;        &#xD;&#xA;        return token&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;    * Internal methods for querying the keychain.&#xD;&#xA;    */&#xD;&#xA;    private class func save(service: NSString, data: NSString) {&#xD;&#xA;        var dataFromString: NSData = data.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: false)&#xD;&#xA;        &#xD;&#xA;        // Instantiate a new default keychain query&#xD;&#xA;        var keychainQuery: NSMutableDictionary = NSMutableDictionary(objects: [kSecClassGenericPasswordValue, service, userAccount, dataFromString], forKeys: [kSecClassValue, kSecAttrServiceValue, kSecAttrAccountValue, kSecValueDataValue])&#xD;&#xA;        &#xD;&#xA;        // Delete any existing items&#xD;&#xA;        SecItemDelete(keychainQuery as CFDictionaryRef)&#xD;&#xA;        &#xD;&#xA;        // Add the new keychain item&#xD;&#xA;        var status: OSStatus = SecItemAdd(keychainQuery as CFDictionaryRef, nil)&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    private class func load(service: NSString) -> String? {&#xD;&#xA;        // Instantiate a new default keychain query&#xD;&#xA;        // Tell the query to return a result&#xD;&#xA;        // Limit our results to one item&#xD;&#xA;        var keychainQuery: NSMutableDictionary = NSMutableDictionary(objects: [kSecClassGenericPasswordValue, service, userAccount, kCFBooleanTrue, kSecMatchLimitOneValue], forKeys: [kSecClassValue, kSecAttrServiceValue, kSecAttrAccountValue, kSecReturnDataValue, kSecMatchLimitValue])&#xD;&#xA;        &#xD;&#xA;        var dataTypeRef :Unmanaged<AnyObject>?&#xD;&#xA;        &#xD;&#xA;        // Search for the keychain items&#xD;&#xA;        let status: OSStatus = SecItemCopyMatching(keychainQuery, &dataTypeRef)&#xD;&#xA;        &#xD;&#xA;        let opaque = dataTypeRef?.toOpaque()&#xD;&#xA;        &#xD;&#xA;        var contentsOfKeychain: String?&#xD;&#xA;        &#xD;&#xA;        if let op = opaque? {&#xD;&#xA;            let retrievedData = Unmanaged<NSData>.fromOpaque(op).takeUnretainedValue()&#xD;&#xA;            &#xD;&#xA;            // Convert the data retrieved from the keychain into a string&#xD;&#xA;            contentsOfKeychain = NSString(data: retrievedData, encoding: NSUTF8StringEncoding)&#xD;&#xA;        } else {&#xD;&#xA;            println(""Nothing was retrieved from the keychain. Status code \\(status)"")&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        return contentsOfKeychain&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I just wan't to remove the Optional thing around the str&#xD;&#xA;&#xD;&#xA;I have take this code from:&#xD;&#xA;&#xD;&#xA;http://matthewpalmer.net/blog/2014/06/21/example-ios-keychain-swift-save-query/";;added 2337 characters in body
72163080;25488162;3971619;5;c61ac546-6d0c-4299-a967-3fb3dda04913;2014-08-25 15:24:47.0;"When I try to get my keyChain value,  it return a string containing: &#xD;&#xA;&#xD;&#xA;    Optional(""[thing in the KeyChain]"")&#xD;&#xA;&#xD;&#xA;so, I tried to remove ""Optional"" by using a loop:&#xD;&#xA;&#xD;&#xA;    var str = KeychainService.loadToken()&#xD;&#xA;        &#xD;&#xA;    for(var i = 0; i < 9 ; i++)&#xD;&#xA;    {&#xD;&#xA;        str[i] = """"&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;But i get a error: NSString does not have a member named 'subscript'&#xD;&#xA;&#xD;&#xA;The KeychainService class:&#xD;&#xA;&#xD;&#xA;    import Foundation&#xD;&#xA;    import Security&#xD;&#xA;&#xD;&#xA;    let serviceIdentifier = ""MySerivice""&#xD;&#xA;    let userAccount = ""authenticatedUser""&#xD;&#xA;    let accessGroup = ""MySerivice""&#xD;&#xA;&#xD;&#xA;    // Arguments for the keychain queries&#xD;&#xA;    let kSecClassValue = kSecClass.takeRetainedValue() as NSString&#xD;&#xA;    let kSecAttrAccountValue = kSecAttrAccount.takeRetainedValue() as NSString&#xD;&#xA;    let kSecValueDataValue = kSecValueData.takeRetainedValue() as NSString&#xD;&#xA;    let kSecClassGenericPasswordValue = kSecClassGenericPassword.takeRetainedValue() as NSString&#xD;&#xA;    let kSecAttrServiceValue = kSecAttrService.takeRetainedValue() as NSString&#xD;&#xA;    let kSecMatchLimitValue = kSecMatchLimit.takeRetainedValue() as NSString&#xD;&#xA;    let kSecReturnDataValue = kSecReturnData.takeRetainedValue() as NSString&#xD;&#xA;    let kSecMatchLimitOneValue = kSecMatchLimitOne.takeRetainedValue() as NSString&#xD;&#xA;&#xD;&#xA;    class KeychainService: NSObject {&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;    * Exposed methods to perform queries.&#xD;&#xA;    * Note: feel free to play around with the arguments&#xD;&#xA;    * for these if you want to be able to customise the&#xD;&#xA;    * service identifier, user accounts, access groups, etc.&#xD;&#xA;    */&#xD;&#xA;    internal class func saveToken(token: NSString) {&#xD;&#xA;        self.save(serviceIdentifier, data: token)&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    internal class func loadToken() -> NSString? {&#xD;&#xA;        var token = self.load(serviceIdentifier)&#xD;&#xA;        &#xD;&#xA;        return token&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;    * Internal methods for querying the keychain.&#xD;&#xA;    */&#xD;&#xA;    private class func save(service: NSString, data: NSString) {&#xD;&#xA;        var dataFromString: NSData = data.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: false)&#xD;&#xA;        &#xD;&#xA;        // Instantiate a new default keychain query&#xD;&#xA;        var keychainQuery: NSMutableDictionary = NSMutableDictionary(objects: [kSecClassGenericPasswordValue, service, userAccount, dataFromString], forKeys: [kSecClassValue, kSecAttrServiceValue, kSecAttrAccountValue, kSecValueDataValue])&#xD;&#xA;        &#xD;&#xA;        // Delete any existing items&#xD;&#xA;        SecItemDelete(keychainQuery as CFDictionaryRef)&#xD;&#xA;        &#xD;&#xA;        // Add the new keychain item&#xD;&#xA;        var status: OSStatus = SecItemAdd(keychainQuery as CFDictionaryRef, nil)&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    private class func load(service: NSString) -> String? {&#xD;&#xA;        // Instantiate a new default keychain query&#xD;&#xA;        // Tell the query to return a result&#xD;&#xA;        // Limit our results to one item&#xD;&#xA;        var keychainQuery: NSMutableDictionary = NSMutableDictionary(objects: [kSecClassGenericPasswordValue, service, userAccount, kCFBooleanTrue, kSecMatchLimitOneValue], forKeys: [kSecClassValue, kSecAttrServiceValue, kSecAttrAccountValue, kSecReturnDataValue, kSecMatchLimitValue])&#xD;&#xA;        &#xD;&#xA;        var dataTypeRef :Unmanaged<AnyObject>?&#xD;&#xA;        &#xD;&#xA;        // Search for the keychain items&#xD;&#xA;        let status: OSStatus = SecItemCopyMatching(keychainQuery, &dataTypeRef)&#xD;&#xA;        &#xD;&#xA;        let opaque = dataTypeRef?.toOpaque()&#xD;&#xA;        &#xD;&#xA;        var contentsOfKeychain: String?&#xD;&#xA;        &#xD;&#xA;        if let op = opaque? {&#xD;&#xA;            let retrievedData = Unmanaged<NSData>.fromOpaque(op).takeUnretainedValue()&#xD;&#xA;            &#xD;&#xA;            // Convert the data retrieved from the keychain into a string&#xD;&#xA;            contentsOfKeychain = NSString(data: retrievedData, encoding: NSUTF8StringEncoding)&#xD;&#xA;        } else {&#xD;&#xA;            println(""Nothing was retrieved from the keychain. Status code \\(status)"")&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        return contentsOfKeychain&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I just wan't to remove the Optional thing around the str&#xD;&#xA;Or is there a better way to do that?&#xD;&#xA;&#xD;&#xA;I have take this code from:&#xD;&#xA;&#xD;&#xA;http://matthewpalmer.net/blog/2014/06/21/example-ios-keychain-swift-save-query/";;added 38 characters in body
