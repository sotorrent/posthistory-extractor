Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
100525032;32801275;3597276;2;ba9d4241-4764-404b-90a7-8206207d58c8;2015-09-26 19:44:25.0;"The problem isn't the `border-box`. The problem is that `inline-block` elements always create a space for themselves.&#xD;&#xA;&#xD;&#xA;You can fix the problem by adding `font-size: 0` to the parent element (`.ok`)&#xD;&#xA;&#xD;&#xA;    .ok { font-size: 0; }&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/1/&#xD;&#xA;&#xD;&#xA;Another way to solve this problem is by putting all `inline-block` elements together (no newlines) in the source:&#xD;&#xA;&#xD;&#xA;    <div class=""ok"">&#xD;&#xA;    <div class=""box"">1</div><div class=""box"">2</div><div class=""box"">3</div><div class=""box"">4</div>&#xD;&#xA;    </div>&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/2/";;
100525173;32801275;3597276;5;295933b9-d80b-40d6-85c0-febc4f02898c;2015-09-26 19:49:33.0;"The problem isn't the `border-box`. The problem is that `inline-block` elements always create a space for themselves.&#xD;&#xA;&#xD;&#xA;You can fix the problem by adding `font-size: 0` to the parent element:&#xD;&#xA;&#xD;&#xA;    .ok { font-size: 0; }&#xD;&#xA;&#xD;&#xA;Then restoring the font on the nested elements:&#xD;&#xA;&#xD;&#xA;    .box { font-size: 16px; }&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/5/&#xD;&#xA;&#xD;&#xA;Another way to solve this problem is by putting all `inline-block` elements together (no newlines) in the source:&#xD;&#xA;&#xD;&#xA;    <div class=""ok"">&#xD;&#xA;    <div class=""box"">1</div><div class=""box"">2</div><div class=""box"">3</div><div class=""box"">4</div>&#xD;&#xA;    </div>&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/2/";;added 84 characters in body
100525430;32801275;3597276;5;966a023d-d67e-445d-a456-04c79f0f8cef;2015-09-26 19:56:24.0;"The problem isn't the `border-box`. The problem is that `inline-block` elements always [create a space for themselves][1].&#xD;&#xA;&#xD;&#xA;You can fix the problem by adding `font-size: 0` to the parent element:&#xD;&#xA;&#xD;&#xA;    .ok { font-size: 0; }&#xD;&#xA;&#xD;&#xA;Then restoring the font on the nested elements:&#xD;&#xA;&#xD;&#xA;    .box { font-size: 16px; }&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/5/&#xD;&#xA;&#xD;&#xA;Another way to solve this problem is by putting all `inline-block` elements together (no newlines) in the source:&#xD;&#xA;&#xD;&#xA;    <div class=""ok"">&#xD;&#xA;    <div class=""box"">1</div><div class=""box"">2</div><div class=""box"">3</div><div class=""box"">4</div>&#xD;&#xA;    </div>&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/2/&#xD;&#xA;&#xD;&#xA;To learn more about this issue see:<br>  &#xD;&#xA;&#xD;&#xA; - http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements&#xD;&#xA; - http://stackoverflow.com/questions/16678929/display-inline-block-what-is-that-space&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements";;added link references
100525854;32801275;3597276;5;c92cd161-9b57-4fc2-8fb3-3575909ebb0d;2015-09-26 20:08:43.0;"The problem isn't the `box-sizing: border-box`. The problem is that `inline-block` elements are always [rendered by default with a bit of extra space.][1].&#xD;&#xA;&#xD;&#xA;One conventional way to remove the extra space is by setting `font-size: 0` to the parent element:&#xD;&#xA;&#xD;&#xA;    .ok { font-size: 0; }&#xD;&#xA;&#xD;&#xA;You can restore the font on the child elements:&#xD;&#xA;&#xD;&#xA;    .box { font-size: 16px; }&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/5/&#xD;&#xA;&#xD;&#xA;Another way to solve this problem is by putting all `inline-block` elements side-by-side (no newlines) in the source:&#xD;&#xA;&#xD;&#xA;    <div class=""ok"">&#xD;&#xA;    <div class=""box"">1</div><div class=""box"">2</div><div class=""box"">3</div><div class=""box"">4</div>&#xD;&#xA;    </div>&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/2/&#xD;&#xA;&#xD;&#xA;To learn more about this issue see:<br>  &#xD;&#xA;&#xD;&#xA; - http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements&#xD;&#xA; - http://stackoverflow.com/questions/16678929/display-inline-block-what-is-that-space&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements";;added details
100526497;32801275;3597276;5;76ebfb84-bfa0-42d0-b4ce-3f90467f5933;2015-09-26 20:27:47.0;"The problem isn't the `box-sizing: border-box`. The problem is that `inline-block` elements are always [rendered by default with a bit of extra space][1].&#xD;&#xA;&#xD;&#xA;Why? Because a `div` set to `inline-block` has some inline element characteristics. If you're writing text in a `<p>` element, every time you hit the space bar or add a line break a space will be rendered by the browser. The same rule applies to `inline-block` divs. Like with words, a space matters.&#xD;&#xA;&#xD;&#xA;One conventional way to remove the space is by setting `font-size: 0` to the parent element:&#xD;&#xA;&#xD;&#xA;    .ok { font-size: 0; }&#xD;&#xA;&#xD;&#xA;You can restore the font on the child elements:&#xD;&#xA;&#xD;&#xA;    .box { font-size: 16px; }&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/5/&#xD;&#xA;&#xD;&#xA;Another way to solve this problem is by putting all `inline-block` elements side-by-side (no newlines) in the source:&#xD;&#xA;&#xD;&#xA;    <div class=""ok"">&#xD;&#xA;    <div class=""box"">1</div><div class=""box"">2</div><div class=""box"">3</div><div class=""box"">4</div>&#xD;&#xA;    </div>&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/2/&#xD;&#xA;&#xD;&#xA;Other options include *negative margins*, *omitting closing tags*, *floats* and *flexbox*. See this article for details on each method: &#xD;&#xA;&#xD;&#xA; - [Fighting the Space Between Inline Block Elements](https://css-tricks.com/fighting-the-space-between-inline-block-elements/)&#xD;&#xA;&#xD;&#xA;To learn more about this issue see:<br>  &#xD;&#xA;&#xD;&#xA; - http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements&#xD;&#xA; - http://stackoverflow.com/questions/16678929/display-inline-block-what-is-that-space&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements";;added link references
100528774;32801275;3597276;5;02276c20-657c-4269-aa68-8bb269683a18;2015-09-26 21:42:12.0;"The problem isn't the `box-sizing: border-box`. The problem is that `inline-block` elements are always [rendered by default with a bit of extra space][1].&#xD;&#xA;&#xD;&#xA;Why? Because a `div` set to `inline-block` has some inline element characteristics. If you're writing text in a `<p>` element, every time you hit the space bar or add a line break a space will be rendered by the browser. The same rule applies to `inline-block` divs. Like with words, a space matters.&#xD;&#xA;&#xD;&#xA;One conventional way to remove the space is by setting `font-size: 0` to the parent element:&#xD;&#xA;&#xD;&#xA;    .ok { font-size: 0; }&#xD;&#xA;&#xD;&#xA;You can restore the font on the child elements:&#xD;&#xA;&#xD;&#xA;    .box { font-size: 16px; }&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/5/&#xD;&#xA;&#xD;&#xA;Another solution puts all `inline-block` elements side-by-side (no newlines) in the source:&#xD;&#xA;&#xD;&#xA;    <div class=""ok"">&#xD;&#xA;    <div class=""box"">1</div><div class=""box"">2</div><div class=""box"">3</div><div class=""box"">4</div>&#xD;&#xA;    </div>&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/2/&#xD;&#xA;&#xD;&#xA;Other options include *negative margins*, *omitting closing tags*, *using comment tags*, *floats* and *flexbox*. See this article for details on each method: &#xD;&#xA;&#xD;&#xA; - [Fighting the Space Between Inline Block Elements](https://css-tricks.com/fighting-the-space-between-inline-block-elements/)&#xD;&#xA;&#xD;&#xA;To learn more about this issue see:<br>  &#xD;&#xA;&#xD;&#xA; - http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements&#xD;&#xA; - http://stackoverflow.com/questions/16678929/display-inline-block-what-is-that-space&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements";;"added another method to solve problem; removed unnecessary text;"
104304907;32801275;3597276;5;b82a6165-922d-4240-824f-3df691a23abb;2015-11-17 11:45:01.0;"The problem isn't the `box-sizing: border-box`. The problem is that `inline-block` elements are rendered by default with a bit of extra space.&#xD;&#xA;&#xD;&#xA;Why? Because a `div` set to `inline-block` has some inline element characteristics. &#xA;&#xA;A space or line break between `span` elements (inline, by default) will result in a space rendered by the browser.&#xA;&#xA;Similarly, if you're writing text in a `<p>` element, every time you hit the space bar or add a line break a space will be rendered by the browser. &#xA;&#xA;This same rule applies to `inline-block` divs. A space or line break in the source will result in a space rendered.&#xD;&#xA;&#xA;Hence, several methods for fixing this problem involve eliminating spaces in the source.&#xA;&#xD;&#xA;One conventional method sets `font-size: 0` on the parent element:&#xD;&#xA;&#xD;&#xA;    .ok { font-size: 0; }&#xD;&#xA;&#xD;&#xA;And then restores the font on the child elements:&#xD;&#xA;&#xD;&#xA;    .box { font-size: 16px; }&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/5/&#xD;&#xA;&#xD;&#xA;Another solution puts all `inline-block` elements side-by-side (no spaces) in the source:&#xD;&#xA;&#xD;&#xA;    <div class=""ok"">&#xD;&#xA;    <div class=""box"">1</div><div class=""box"">2</div><div class=""box"">3</div><div class=""box"">4</div>&#xD;&#xA;    </div>&#xD;&#xA;&#xD;&#xA;Demo: http://jsfiddle.net/x3ftdx6n/2/&#xD;&#xA;&#xD;&#xA;Other options include *negative margins*, *omitting closing tags*, *using comment tags*, *floats* and *flexbox*. See this article for details on each method: &#xD;&#xA;&#xD;&#xA; - [Fighting the Space Between Inline Block Elements](https://css-tricks.com/fighting-the-space-between-inline-block-elements/)&#xD;&#xA;&#xD;&#xA;To learn more about this issue see:<br>  &#xD;&#xA;&#xD;&#xA; - http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements&#xD;&#xA; - http://stackoverflow.com/questions/16678929/display-inline-block-what-is-that-space&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements";;"added details; improved wording;; deleted 15 characters in body"
117344686;32801275;3597276;5;f0f3e4e8-d5ba-4c89-a0cb-f0a433aaf29c;2016-05-05 03:35:02.0;"The problem is that `inline-block` elements are rendered by default with a bit of extra space.&#xD;&#xA;&#xD;&#xA;Why? Because a `div` set to `inline-block` has some inline element characteristics. &#xD;&#xA;&#xD;&#xA;A space or line break between `span` elements will result in a space rendered by the browser.&#xD;&#xA;&#xD;&#xA;Similarly, if you're writing text in a `<p>` element, every time you hit the space bar or add a line break a space will be rendered by the browser. &#xD;&#xA;&#xD;&#xA;This same rule applies to `inline-block` divs. A space or line break in the source will result in a space rendered.&#xD;&#xA;&#xD;&#xA;Hence, several methods for fixing this problem involve eliminating spaces in the source.&#xD;&#xA;&#xD;&#xA;One conventional method sets `font-size: 0` on the parent element:&#xD;&#xA;&#xD;&#xA;    .ok { font-size: 0; }&#xD;&#xA;&#xD;&#xA;And then restores the font on the child elements:&#xD;&#xA;&#xD;&#xA;    .box { font-size: 16px; }&#xD;&#xA;&#xD;&#xA;[DEMO](http://jsfiddle.net/x3ftdx6n/5/)&#xD;&#xA;&#xD;&#xA;Another solution puts all `inline-block` elements side-by-side (no spaces) in the source:&#xD;&#xA;&#xD;&#xA;    <div class=""ok"">&#xD;&#xA;    <div class=""box"">1</div><div class=""box"">2</div><div class=""box"">3</div><div class=""box"">4</div>&#xD;&#xA;    </div>&#xD;&#xA;&#xD;&#xA;[DEMO](http://jsfiddle.net/x3ftdx6n/2/)&#xD;&#xA;&#xD;&#xA;Other options include *negative margins*, *omitting closing tags*, *using comment tags*, *floats* and *flexbox*. See this article for details on each method: &#xD;&#xA;&#xD;&#xA; - [Fighting the Space Between Inline Block Elements](https://css-tricks.com/fighting-the-space-between-inline-block-elements/)&#xD;&#xA;&#xD;&#xA;To learn more about this issue see:<br>  &#xD;&#xA;&#xD;&#xA; - http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements&#xD;&#xA; - http://stackoverflow.com/questions/16678929/display-inline-block-what-is-that-space&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://stackoverflow.com/questions/5078239/how-to-remove-the-space-between-inline-block-elements";;"improved wording and formatting;"
122670301;32801275;3597276;5;5dc3bb10-c33e-4c72-91e1-af46eb6b2d29;2016-07-14 21:38:25.0;"The problem is that `inline-block` elements are, by default, rendered with a bit of extra space.&#xD;&#xA;&#xD;&#xA;Why? Because a `div` set to `inline-block` has some inline element characteristics. &#xD;&#xA;&#xD;&#xA;A space or line break between `span` elements will result in a space rendered by the browser.&#xD;&#xA;&#xD;&#xA;Similarly, if you're writing text in a `<p>` element, every time you hit the space bar or add a line break a space will be rendered by the browser. &#xD;&#xA;&#xD;&#xA;This same rule applies to `inline-block` divs. A space or line break in the source will result in a space rendered. This creates unexpected width, which can result in an overflow or wrapping.&#xD;&#xA;&#xD;&#xA;One solution is to remove all whitespace between elements in the source:&#xD;&#xA;&#xD;&#xA;<!-- begin snippet: js hide: false console: true babel: false -->&#xD;&#xA;&#xD;&#xA;<!-- language: lang-css -->&#xD;&#xA;&#xD;&#xA;    .ok {&#xD;&#xA;      width: 300px;&#xD;&#xA;      background: red;&#xD;&#xA;      height: 100px;&#xD;&#xA;      box-sizing: border-box;&#xD;&#xA;    }&#xD;&#xA;    .box {&#xD;&#xA;      display: inline-block;&#xD;&#xA;      box-sizing: border-box;&#xD;&#xA;      width: 25%;&#xD;&#xA;      border: 2px solid blue;&#xD;&#xA;      height: 100%;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;<!-- language: lang-html -->&#xD;&#xA;&#xD;&#xA;    <div class=""ok""><div class=""box"">1</div><div class=""box"">2</div><div class=""box"">3</div><div class=""box"">4</div></div>&#xD;&#xA;&#xD;&#xA;<!-- end snippet -->&#xD;&#xA;&#xD;&#xA;Another method sets `font-size: 0` on the parent and, if necessary, restores the font on the child:&#xD;&#xA;&#xD;&#xA;<!-- begin snippet: js hide: false console: true babel: false -->&#xD;&#xA;&#xD;&#xA;<!-- language: lang-css -->&#xD;&#xA;&#xD;&#xA;    .ok {&#xD;&#xA;      width: 300px;&#xD;&#xA;      background: red;&#xD;&#xA;      height: 100px;&#xD;&#xA;      box-sizing: border-box;&#xD;&#xA;      font-size: 0;&#xD;&#xA;    }&#xD;&#xA;    .box {&#xD;&#xA;      display: inline-block;&#xD;&#xA;      box-sizing: border-box;&#xD;&#xA;      width: 25%;&#xD;&#xA;      border: 2px solid blue;&#xD;&#xA;      height: 100%;&#xD;&#xA;      font-size: 16px;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;<!-- language: lang-html -->&#xD;&#xA;&#xD;&#xA;    <div class=""ok"">&#xD;&#xA;      <div class=""box"">1</div>&#xD;&#xA;      <div class=""box"">2</div>&#xD;&#xA;      <div class=""box"">3</div>&#xD;&#xA;      <div class=""box"">4</div>&#xD;&#xA;    </div>&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;<!-- end snippet -->&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Other options include *negative margins*, *omitting closing tags*, *using comment tags*, *floats* and *flexbox*. See this article for more details: &#xD;&#xA;&#xD;&#xA; - [Fighting the Space Between Inline Block Elements](https://css-tricks.com/fighting-the-space-between-inline-block-elements/)";;"improved wording and formatting; added details;"
