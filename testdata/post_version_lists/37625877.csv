Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
119651247;37625877;2552290;2;0c2009c8-396b-4422-a69f-f91813f1792d;2016-06-04 02:55:16.0;"I'm surprised by how painful it is to use java.util.ArrayList<T>.toArray().&#xD;&#xA;&#xD;&#xA;Suppose I declare my array list as:&#xD;&#xA;&#xD;&#xA;    java.util.ArrayList<double[]> arrayList = new java.util.ArrayList<double[]>();&#xD;&#xA;    ... add some items ...&#xD;&#xA;&#xD;&#xA;Then to convert it to an array, I have to do one of the following:&#xD;&#xA;&#xD;&#xA;    double[][] array = (double[][])arrayList.toArray(new double[0][]);&#xD;&#xA;or:&#xD;&#xA;&#xD;&#xA;    double[][] array = (double[][])arrayList.toArray(new double[arrayList.size()][]);&#xD;&#xA;or:&#xD;&#xA;&#xD;&#xA;    double[][] array = new double[arrayList.size()];&#xD;&#xA;    arrayList.toArray(array);&#xD;&#xA;&#xD;&#xA;None of the above are very readable.  Shouldn't I be able to say the following instead?&#xD;&#xA;&#xD;&#xA;    double[][] array = arrayList.toArray();&#xD;&#xA;But that gives a compile error because Object[] can't be converted to double[][].&#xD;&#xA;&#xD;&#xA;Perhaps it's not possible because toArray has to return Object[]&#xD;&#xA;for backwards compatibility with pre-template days.&#xD;&#xA;But if that's the case, couldn't a friendlier alternative method be added&#xD;&#xA;with a different name?  I can't think of a good name, but almost anything&#xD;&#xA;would be better than the existing ways; e.g. the following would be fine:&#xD;&#xA;&#xD;&#xA;    double[][] array = arrayList.toArrayOfNaturalType();&#xD;&#xA;&#xD;&#xA;No such member function exists, but maybe it's possible to write a generic helper function that will do it?&#xD;&#xA;&#xD;&#xA;    double[][] array = MyToArray(arrayList);&#xD;&#xA;The signature of MyToArray would be something like:&#xD;&#xA;&#xD;&#xA;    public static <T> T[] MyToArray(java.util.ArrayList<T> arrayList)&#xD;&#xA;Is it possible to implement such a function?&#xD;&#xA;My various attempts at implementing it resulted in compile errors&#xD;&#xA;""error: generic array creation"" or ""error: cannot select from a type variable"".&#xD;&#xA;&#xD;&#xA;Here's the closest I was able to get:&#xD;&#xA;&#xD;&#xA;    public static <T> T[] MyToArray(java.util.ArrayList<T> arrayList, Class type)&#xD;&#xA;    {&#xD;&#xA;        T[] array = (T[])java.lang.reflect.Array.newInstance(type, arrayList.size());&#xD;&#xA;        arrayList.toArray(array);&#xD;&#xA;        return array;&#xD;&#xA;    }&#xD;&#xA;It's called like this:&#xD;&#xA;&#xD;&#xA;    double[][] array = MyToArray(arrayList, double[].class);&#xD;&#xA;I wish the redundant final parameter wasn't there, but, even so,&#xD;&#xA;I think this is the least-horrible way that I've seen so far for converting array list to array.&#xD;&#xA;&#xD;&#xA;Is it possible to do any better than this?&#xD;&#xA;";;
119651373;37625877;2552290;5;e6bca437-f19a-4481-8501-6ef0d407c60b;2016-06-04 03:00:48.0;"I'm surprised by how painful it is to use java.util.ArrayList&lt;T>.toArray().&#xD;&#xA;&#xD;&#xA;Suppose I declare my array list as:&#xD;&#xA;&#xD;&#xA;    java.util.ArrayList<double[]> arrayList = new java.util.ArrayList<double[]>();&#xD;&#xA;    ... add some items ...&#xD;&#xA;&#xD;&#xA;Then to convert it to an array, I have to do one of the following:&#xD;&#xA;&#xD;&#xA;    double[][] array = (double[][])arrayList.toArray(new double[0][]);&#xD;&#xA;or:&#xD;&#xA;&#xD;&#xA;    double[][] array = (double[][])arrayList.toArray(new double[arrayList.size()][]);&#xD;&#xA;or:&#xD;&#xA;&#xD;&#xA;    double[][] array = new double[arrayList.size()];&#xD;&#xA;    arrayList.toArray(array);&#xD;&#xA;&#xD;&#xA;None of the above are very readable.  Shouldn't I be able to say the following instead?&#xD;&#xA;&#xD;&#xA;    double[][] array = arrayList.toArray();&#xD;&#xA;But that gives a compile error because Object[] can't be converted to double[][].&#xD;&#xA;&#xD;&#xA;Perhaps it's not possible because toArray has to return Object[]&#xD;&#xA;for backwards compatibility with pre-template days.&#xD;&#xA;But if that's the case, couldn't a friendlier alternative method be added&#xD;&#xA;with a different name?  I can't think of a good name, but almost anything&#xD;&#xA;would be better than the existing ways; e.g. the following would be fine:&#xD;&#xA;&#xD;&#xA;    double[][] array = arrayList.toArrayOfNaturalType();&#xD;&#xA;&#xD;&#xA;No such member function exists, but maybe it's possible to write a generic helper function that will do it?&#xD;&#xA;&#xD;&#xA;    double[][] array = MyToArray(arrayList);&#xD;&#xA;The signature of MyToArray would be something like:&#xD;&#xA;&#xD;&#xA;    public static <T> T[] MyToArray(java.util.ArrayList<T> arrayList)&#xD;&#xA;Is it possible to implement such a function?&#xD;&#xA;My various attempts at implementing it resulted in compile errors&#xD;&#xA;""error: generic array creation"" or ""error: cannot select from a type variable"".&#xD;&#xA;&#xD;&#xA;Here's the closest I was able to get:&#xD;&#xA;&#xD;&#xA;    public static <T> T[] MyToArray(java.util.ArrayList<T> arrayList, Class type)&#xD;&#xA;    {&#xD;&#xA;        T[] array = (T[])java.lang.reflect.Array.newInstance(type, arrayList.size());&#xD;&#xA;        arrayList.toArray(array);&#xD;&#xA;        return array;&#xD;&#xA;    }&#xD;&#xA;It's called like this:&#xD;&#xA;&#xD;&#xA;    double[][] array = MyToArray(arrayList, double[].class);&#xD;&#xA;I wish the redundant final parameter wasn't there, but, even so,&#xD;&#xA;I think this is the least-horrible way that I've seen so far for converting array list to array.&#xD;&#xA;&#xD;&#xA;Is it possible to do any better than this?&#xD;&#xA;";;"use &lt; so that the <T> will appear properly. doesn't seem to be a problem in code sections."
